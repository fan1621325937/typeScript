{"version":3,"sources":["src/page/day3.2.ts"],"names":[],"mappings":";;;;;;AA2JA,IAAA,KAAA,GAAA,YAAA;EAKE,SAAA,KAAA,CAAY,KAAU,EAAE,MAAe,EAAA;IACrC,IAAI,OAAA,CAAO,KAAK,MAAK,QAAQ,EAAE;MAC7B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK;MACxB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM;IAC5B;IAEA,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;MAC7B,IAAI,CAAC,KAAK,GAAG,KAAK;MAClB,IAAI,CAAC,MAAM,GAAG,MAAM;IACtB;EACF;EAEA,KAAA,CAAA,SAAA,CAAA,OAAO,GAAP,YAAA;IACE,OAAO,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM;EACjC,CAAC;EACH,OAAA,KAAC;AAAD,CApBA,CAAA,CAAA;AAsBA,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC;AAC7B,IAAI,MAAM,GAAG,IAAI,KAAK,CAAC;EAAE,KAAK,EAAE,EAAE;EAAE,MAAM,EAAE;AAAE,CAAE,CAAC;AAEjD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAA,CAAE,CAAC;AAC5B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAA,CAAE,CAAC","file":"day3.2.8ede5788.js","sourceRoot":"..","sourcesContent":["// type MessageType =\r\n//   | \"image\"\r\n//   | \"video\"\r\n//   | \"audio\"\r\n//   | \"text\"\r\n//   | \"other\"\r\n//   | \"file\"\r\n//   | String;\r\n\r\nimport { get } from \"lodash\";\r\n\r\n// type Message = {\r\n//   id: number;\r\n//   type: MessageType;\r\n//   sendmessage: string;\r\n// };\r\n\r\n// let Messages: Message[] = [\r\n//   {\r\n//     id: 1,\r\n//     type: \"image\",\r\n//     sendmessage: \"你好啊,今晚咱们一起去三里屯吧\",\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     type: \"audio\",\r\n//     sendmessage: \"朝辞白帝彩云间，千里江陵一日还\",\r\n//   },\r\n//   {\r\n//     id: 3,\r\n//     type: \"audio\",\r\n//     sendmessage: \"你好！张无忌\",\r\n//   },\r\n//   {\r\n//     id: 4,\r\n//     type: \"image\",\r\n//     sendmessage: \"刘老根苦练舞台绝技！\",\r\n//   },\r\n//   {\r\n//     id: 5,\r\n//     type: \"image\",\r\n//     sendmessage: \"今晚王牌对王牌节目咋样?\",\r\n//   },\r\n// ];\r\n\r\n//函数重载\r\n// function getMessage(\r\n//   value: number | MessageType\r\n// ): Message | undefined | Message[] {\r\n//   if (typeof value === \"number\") {\r\n//     return Messages.find((msg) => {\r\n//       return value === msg.id;\r\n//     });\r\n//   } else {\r\n//     return Messages.filter((msg) => {\r\n//       return value === msg.type;\r\n//     });\r\n//   }\r\n// }\r\n\r\n// 重载签名\r\n// function getMessage(id: number): Message;\r\n// function getMessage(type: MessageType): Message[];\r\n\r\n// //实现签名函数 any,unknown可以接受任何类型\r\n// function getMessage(\r\n//   value: number | MessageType,\r\n//   length?: number\r\n// ): Message | Message[] {\r\n//   if (typeof value === \"number\") {\r\n//     return Messages.find((msg) => {\r\n//       return value === msg.id;\r\n//     });\r\n//   } else {\r\n//     return Messages.filter((msg) => {\r\n//       return value === msg.type;\r\n//     }).splice(0, length);\r\n//   }\r\n// }\r\n\r\n// let msg = getMessage(\"image\");\r\n// msg.forEach((item) => {\r\n//   console.log(\"msg:\", item);\r\n// });\r\n\r\n//方法重载\r\n// class ArrayList {\r\n//   //定义一个引用属性[数组]\r\n//   constructor(public arr: any[]) {\r\n//     this.arr = arr;\r\n//   }\r\n\r\n//   get(index: number): any {\r\n//     return this.arr[index];\r\n//   }\r\n\r\n//   remove(value: number): number; //remove方法返回的是一个数字\r\n//   remove(value: object): object; //remove方法返回的是一个对象\r\n//   remove(value: any): any {\r\n//     this.arr = this.arr.filter((ele, index) => {\r\n//       //如果是根据数字【元素索引】去删除元素，remove方法返回的是一个数字\r\n//       if (typeof value === \"number\") {\r\n//         return value !== index;\r\n//       } else {\r\n//         // 如果是根据对象去删除元素，remove方法返回的是一个对象\r\n//         return value !== ele;\r\n//       }\r\n//     });\r\n//     return value;\r\n//   }\r\n// }\r\n\r\n// let arrList = [\r\n//   {\r\n//     name: \"后盾人\",\r\n//     age: 18,\r\n//   },\r\n//   {\r\n//     name: \"后盾人\",\r\n//     age: 19,\r\n//   },\r\n//   {\r\n//     name: \"后盾人\",\r\n//     age: 20,\r\n//   },\r\n// ];\r\n\r\n// let list = new ArrayList(arrList);\r\n\r\n// list.remove(0);\r\n// list.remove({ name: \"后盾人\", age: 19 });\r\n\r\n// console.log(list.get(0));\r\n\r\n//构造器重载\r\n// class Person {\r\n//   name: string;\r\n//   age: number;\r\n//   constructor(name: string, age: number);\r\n//   constructor(name: string);\r\n//   constructor(name: string, age?: number) {\r\n//     this.name = name;\r\n//     this.age = age;\r\n//   }\r\n// }\r\n\r\n//计算正方形面积\r\n//计算创建正方形对象,可以给构造器爨地宽和高,也可以给构造器传递一个包含了宽和高的对象\r\ntype ShapeType = {\r\n  //各种图形的参数\r\n  width?: number;\r\n  height?: number;\r\n  radius?: number;\r\n};\r\n\r\nclass Shape {\r\n  public width: number;\r\n  public height: number;\r\n  constructor(width_: number, height_: number);\r\n  constructor(ShapeTypeInfo: ShapeType);\r\n  constructor(value: any, value2?: number) {\r\n    if (typeof value === \"object\") {\r\n      this.width = value.width;\r\n      this.height = value.height;\r\n    }\r\n\r\n    if (typeof value === \"number\") {\r\n      this.width = value;\r\n      this.height = value2;\r\n    }\r\n  }\r\n\r\n  getArea() {\r\n    return this.width * this.height;\r\n  }\r\n}\r\n\r\nlet shape = new Shape(10, 20);\r\nlet shape3 = new Shape({ width: 10, height: 20 });\r\n\r\nconsole.log(shape.getArea());\r\nconsole.log(shape3.getArea());\r\n\r\nexport {};\r\n"]}